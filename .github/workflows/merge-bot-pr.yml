name: Merge bot PR after CI
on: status

permissions:
  contents: write
  pull-requests: write
  checks: write
  # actions: read # For private repositories

jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo '1' $GITHUB_REF
          echo '2' ${{ github.ref }}
          echo '3' ${{ startsWith(github.ref, 'refs/pull/') }}
          echo '4' ${{ github.actor }}
          echo '5' ${{ github.event.state }}
          echo '6' ${{ github.event_name }}
  dependabot:
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/pull/') && github.actor == 'dependabot[bot]' && github.event.state == 'success' }}
    steps:
      - name: Dependabot metadata
        id: metadata
        # Some patterns can't be parsed. See https://github.com/dependabot/fetch-metadata/pull/224
        uses: dependabot/fetch-metadata@v1.3.5
        with:
          github-token: '${{ secrets.GITHUB_TOKEN }}'
      - uses: actions/checkout@v3
      - name: Approve and merge
        if: ${{steps.metadata.outputs.update-type != 'version-update:semver-major'}}
        run: gh pr review --approve "$PR_URL" && gh pr merge --auto --squash "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

  # Avoid `automerge` renovate official feature.
  #   It wait longtime to be merged.
  # Avoid `platformAutomerge` renovate official feature.
  #   It requires many changes in GitHub settings.
  #    - `Allow auto-merge`
  #    - `Require status checks to pass before merging` and specify the status names
  #   Changing in all personal repository is annoy task for me. Even if using terrafform, getting mandatory CI names in each repo is too annoy!
  renovate:
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/pull/') && github.actor == 'renovate[bot]' && github.event.state == 'success' }}
    steps:
      - uses: actions/checkout@v3
      - name: Approve and merge
        run: gh pr review --approve "$PR_URL" && gh pr merge --auto --squash "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
